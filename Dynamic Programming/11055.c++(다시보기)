#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<int> A(n); // 기본 입력 배열
    for (int i = 0; i < n; i++) {
        cin >> A[i];
    }

    vector<int> dp(n); // dp[i]: A[i]를 마지막으로 하는 최대 합 증가 부분 수열의 합

    // 초기값 설정
    for (int i = 0; i < n; i++) {
        dp[i] = A[i]; // A[i] 하나만 있는 부분 수열을 고려
    }

    // 모든 가능한 증가 부분 수열에 대해 최대 합 계산
    for (int i = 1; i < n; i++) {
        for (int j = 0; j < i; j++) {
            if (A[j] < A[i]) {
                dp[i] = max(dp[i], dp[j] + A[i]);
            }
        }
    }

    // 최대값 찾기
    int max_sum = *max_element(dp.begin(), dp.end());
    cout << max_sum;

    return 0;
}
